Index: src/bullet/bullet.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { screen, map } from \"../engineCore/screen.js\";\r\nimport { Vector } from \"../lib/vector.js\";\r\nimport { _engineCore as engineCore } from \"../engineCore/core.js\";\r\nimport data from './../engineCore/config.json' assert {type: 'json'};\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport class Bullet {\r\n    /**\r\n     *\r\n     * @param loc\r\n     * @param vel\r\n     */\r\n    constructor(loc, vel, acc, delay) {\r\n        // initialize types\r\n        this.mass = data.bulletMass;\r\n        this.location = new Vector(0, 0);\r\n        this.velocity = new Vector(0, 0);\r\n        this.acceleration = acc || new Vector(0, 0);\r\n        this.location = loc;\r\n        this.velocity = vel;\r\n        this.acceleration.add(engineCore.mGravity);\r\n        this.delay = delay || 0;\r\n    }\r\n\r\n    applyForce(force) {\r\n        let f = force;\r\n        f.mult(1 / this.mass);\r\n        this.acceleration.add(f);\r\n    }\r\n\r\n    display() {\r\n        let ctx = screen.mContext;\r\n        ctx.save();\r\n        ctx.fillStyle = 'black'; /* TODO define global styles for the app */\r\n        ctx.beginPath();\r\n        ctx.ellipse(this.location.x, this.location.y,\r\n            3, 3, 0, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.strokeStyle = 'white';\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n        ctx.restore();\r\n    }\r\n\r\n    update() {\r\n        sleep(this.delay).then(() => {\r\n            if ((this.location.x > screen.mWidth + 2) ||\r\n                (this.location.y > screen.mHeight + 2)) {\r\n            } else {\r\n                for (let i = 0; i < engineCore.mDragAreas.length; i++) {\r\n                    let area = engineCore.mDragAreas[i];\r\n                    if (this.isInside(area)) {\r\n                        this.drag(area);\r\n                    }\r\n                }\r\n                this.velocity.add(this.acceleration);\r\n                this.location.add(this.velocity);\r\n            }\r\n        });\r\n    }\r\n\r\n    isInside(area) {\r\n        if (this.location.x > area.x &&\r\n            this.location.x < area.x + area.w &&\r\n            this.location.y > area.y &&\r\n            this.location.y < area.y + area.h) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    drag(dragObj) {\r\n        let speed = this.velocity.mag();\r\n        let dragMagnitude = dragObj.c * speed * speed;\r\n        let drag = new Vector(0, 0);\r\n        drag.x = this.velocity.x;\r\n        drag.y = this.velocity.y;\r\n        drag.mult(-1);\r\n        drag.normalize();\r\n        drag.mult(dragMagnitude);\r\n        this.applyForce(drag);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/bullet/bullet.js b/src/bullet/bullet.js
--- a/src/bullet/bullet.js	
+++ b/src/bullet/bullet.js	
@@ -77,12 +77,14 @@
     drag(dragObj) {
         let speed = this.velocity.mag();
         let dragMagnitude = dragObj.c * speed * speed;
+        console.log(dragMagnitude)
         let drag = new Vector(0, 0);
         drag.x = this.velocity.x;
         drag.y = this.velocity.y;
         drag.mult(-1);
         drag.normalize();
         drag.mult(dragMagnitude);
+        console.log(drag)
         this.applyForce(drag);
     }
 }
